df3Texture<-df3[df3$Attribute %in% myTextureAttributes,]
df3Texture$Attribute<-factor(df3Texture$Attribute,levels=myTextureAttributes,labels=myTextureAttributes)
# Panelist Corr Data
df4<-read.csv(paste(myDir,"\\Data Store\\Data Correlations.csv",sep=""),strip.white=TRUE)
df4$Category<-trim(df4$Category)
df4$Panelist<-as.factor(df4$Panelist)
df4$Date<-ymd(df4$Date)
df4<- df4[df4$Date > myStartDate &     # Begin Date
df4$Date < myEndDate  ,]   # End Date
df4$Category<-as.factor(df4$Category)
df4Flavor<-df4[df4$Attribute %in% myFlavorAttributes,]
df4Flavor$Attribute<-factor(df4Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df4Texture<-df4[df4$Attribute %in% myTextureAttributes,]
df4Texture$Attribute<-factor(df4Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
for (i in 1:length(levels(df1$Panelist))){
pdf(paste("Quarterly Report for Panelist ",levels(df1$Panelist)[i]," ",Sys.Date(),".pdf",sep=""))
# Make Texture Plots Bias
pBias<-ggplot(data=df1Texture[df1Texture$Panelist==levels(df1Texture$Panelist)[i],],
aes(y=Bias,x=Attribute,color=Category,group=1))
pBias<-pBias + coord_flip()
pBias<-pBias + geom_point(pch=19,alpha=0.37)
pBias<- pBias + facet_wrap(~Category,ncol=3)
pBias<- pBias + labs(title = paste("Bias for Panelist",levels(df1$Panelist)[i]))
pBias<- pBias + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pBias<- pBias + geom_hline(y=0,color="black",linetype=2)
print(pBias)
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
rep(dev.off(),5)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
rep(dev.off(),5)
rep(dev.off(),5)
for (i in 1:length(levels(df1$Panelist))){
pdf(paste("Quarterly Report for Panelist ",levels(df1$Panelist)[i]," ",Sys.Date(),".pdf",sep=""))
# Make Texture Plots Bias
pBias<-ggplot(data=df1Texture[df1Texture$Panelist==levels(df1Texture$Panelist)[i],],
aes(y=Bias,x=Attribute,color=Category,group=1))
pBias<-pBias + coord_flip()
pBias<-pBias + geom_point(pch=19,alpha=0.37)
pBias<- pBias + facet_wrap(~Category,ncol=3)
pBias<- pBias + labs(title = paste("Bias for Panelist",levels(df1$Panelist)[i]))
pBias<- pBias + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pBias<- pBias + geom_hline(y=0,color="black",linetype=2)
print(pBias)
}
dev.off()
dev.off()
dev.off()
dev.off()
for (i in 1:length(levels(df1$Panelist))){
pdf(paste("Quarterly Report for Panelist ",levels(df1$Panelist)[i]," ",Sys.Date(),".pdf",sep=""))
# Make Texture Plots Bias
pBias<-ggplot(data=df1Texture[df1Texture$Panelist==levels(df1Texture$Panelist)[i],],
aes(y=Bias,x=Attribute,color=Category,group=1))
pBias<-pBias + coord_flip()
pBias<-pBias + geom_point(pch=19,alpha=0.37)
pBias<- pBias + facet_wrap(~Category,ncol=3)
pBias<- pBias + labs(title = paste("Bias for Panelist",levels(df1$Panelist)[i]))
pBias<- pBias + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pBias<- pBias + geom_hline(y=0,color="black",linetype=2)
print(pBias)
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
for (i in 1:length(levels(df1$Panelist))){
pdf(paste("Quarterly Report for Panelist ",levels(df1$Panelist)[i]," ",Sys.Date(),".pdf",sep=""))
# Make Texture Plots Bias
pBias<-ggplot(data=df1Texture[df1Texture$Panelist==levels(df1Texture$Panelist)[i],],
aes(y=Bias,x=Attribute,color=Category,group=1))
pBias<-pBias + coord_flip()
pBias<-pBias + geom_point(pch=19,alpha=0.37)
pBias<- pBias + facet_wrap(~Category,ncol=3)
pBias<- pBias + labs(title = paste("Bias for Panelist",levels(df1$Panelist)[i]))
pBias<- pBias + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pBias<- pBias + geom_hline(y=0,color="black",linetype=2)
print(pBias)
dev.off()
}
# Get Libraries
library(ggplot2)
library(reshape2)
library(lubridate)
# Set (Fixed) Constants  - CHANGE THESE ON IMPLEMENTATION
myDir<-"C:\\Users\\Owner\\Documents\\Statsmith\\NOR2013 10 Descriptive Analysis Script"
myStartDate<-as.POSIXlt("11/01/2013",format="%m/%d/%Y")
myEndDate<-as.POSIXlt("02/28/2014",format="%m/%d/%Y")
myFlavorAttributes<-c("Pork.Fatty","Turkey","Beef.Fatty","Cured","Smoke.Complex","Woody.Roasted","Fruity","Ashy.Chemical",
"Cheddar.Cheese","Cheese","Spice.Complex","Sage.Rosemary","Pepper","Nutmeg","Clove","Brown.Spice",
"Basil.Oregano","Fennel","Garlic.Onion","Jalapeno","Tomato","Savory.MSG","Salty","Sweet","Sour","Astringent",
"Mouthburn","Pork.AT","Turkey.AT","Meat.AT","Spice.AT","Pepper.AT","Smoke.AT","Cheddar.AT","Cheese.AT","Salty.AT","Mouthburn.AT")
myTextureAttributes<-c("Rough.Outer","Rough.Inside","Loose.Particles","Moistness","Springiness","Tough.Casing","Firmness","Cohesiveness",
"Moisture.Release.1st.Chew","Cohesive.Mass","Moisture.Release.Chew.Down","Oily.Mouthcoating")
# Functions
trim <- function (x) gsub("^\\s+|\\s+$", "", x) # Returns String w/o Leading or Trailing Whitespace
# Get Data Sets For Plots
# Panelist Bias Data
df1<-read.csv(paste(myDir,"\\Data Store\\Data Bias.csv",sep=""),strip.white=TRUE)
df1$Category<-trim(df1$Category)
df1$Panelist<-as.factor(df1$Panelist)
df1$Date<-mdy(df1$Date)
df1<- df1[df1$Date > myStartDate &     # Begin Date
df1$Date < myEndDate  ,]   # End Date
df1$Category<-as.factor(df1$Category)
df1Flavor<-df1[df1$Attribute %in% myFlavorAttributes,]
df1Flavor$Attribute<-factor(df1Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df1Texture<-df1[df1$Attribute %in% myTextureAttributes,]
df1Texture$Attribute<-factor(df1Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
# Panelist S Data
df2<-read.csv(paste(myDir,"\\Data Store\\Data S.csv",sep=""),strip.white=TRUE)
df2$Category<-trim(df2$Category)
df2$Panelist<-as.factor(df2$Panelist)
df2$Date<-ymd(df2$Date)
df2<- df2[df2$Date > myStartDate &     # Begin Date
df2$Date < myEndDate  ,]   # End Date
df2$Category<-as.factor(df2$Category)
df2Flavor<-df2[df2$Attribute %in% myFlavorAttributes,]
df2Flavor$Attribute<-factor(df2Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df2Texture<-df2[df2$Attribute %in% myTextureAttributes,]
df2Texture$Attribute<-factor(df2Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
# Panelist DA Data
df3<-read.csv(paste(myDir,"\\Data Store\\Data DA.csv",sep=""),strip.white=TRUE)
df3$Category<-trim(df3$Category)
df3$Panelists<-as.factor(df3$Panelists)
df3$Date<-ymd(df3$Date)
df3<- df3[df3$Date > myStartDate &     # Begin Date
df3$Date < myEndDate  ,]   # End Date
df3$Category<-as.factor(df3$Category)
df3Flavor<-df3[df3$Attribute %in% myFlavorAttributes,]
df3Flavor$Attribute<-factor(df3Flavor$Attribute,levels=myFlavorAttributes,labels=myFlavorAttributes)
df3Texture<-df3[df3$Attribute %in% myTextureAttributes,]
df3Texture$Attribute<-factor(df3Texture$Attribute,levels=myTextureAttributes,labels=myTextureAttributes)
# Panelist Corr Data
df4<-read.csv(paste(myDir,"\\Data Store\\Data Correlations.csv",sep=""),strip.white=TRUE)
df4$Category<-trim(df4$Category)
df4$Panelist<-as.factor(df4$Panelist)
df4$Date<-ymd(df4$Date)
df4<- df4[df4$Date > myStartDate &     # Begin Date
df4$Date < myEndDate  ,]   # End Date
df4$Category<-as.factor(df4$Category)
df4Flavor<-df4[df4$Attribute %in% myFlavorAttributes,]
df4Flavor$Attribute<-factor(df4Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df4Texture<-df4[df4$Attribute %in% myTextureAttributes,]
df4Texture$Attribute<-factor(df4Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
# Make Plots for Each Panelist
for (i in 1:length(levels(df1$Panelist))){
pdf(paste("Quarterly Report for Panelist ",levels(df1$Panelist)[i]," ",Sys.Date(),".pdf",sep=""))
# Make Texture Plots Bias
pBiasT<-ggplot(data=df1Texture[df1Texture$Panelist==levels(df1Texture$Panelist)[i],],
aes(y=Bias,x=Attribute,color=Category,group=1))
pBiasT<-pBiasT + coord_flip()
pBiasT<-pBiasT + geom_point(pch=19,alpha=0.37)
pBiasT<- pBiasT + facet_wrap(~Category,ncol=3)
pBiasT<- pBiasT + labs(title = paste("Bias for Panelist",levels(df1$Panelist)[i]))
pBiasT<- pBiasT + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pBiasT<- pBiasT + geom_hline(y=0,color="black",linetype=2)
print(pBiasT)
# Make Flavor Plots Bias
pBiasF<-ggplot(data=df1Flavor[df1Flavor$Panelist==levels(df1Flavor$Panelist)[i],],
aes(y=Bias,x=Attribute,color=Category,group=1))
pBiasF<-pBiasF + coord_flip()
pBiasF<-pBiasF + geom_point(pch=19,alpha=0.37)
pBiasF<- pBiasF + facet_wrap(~Category,ncol=3)
pBiasF<- pBiasF + labs(title = paste("Bias for Panelist",levels(df1$Panelist)[i]))
pBiasF<- pBiasF + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pBiasF<- pBiasF + geom_hline(y=0,color="black",linetype=2)
print(pBiasF)
# Make Texture Plots S
pST<-ggplot(data=df2Texture[df2Texture$Panelist==levels(df2Texture$Panelist)[i],],
aes(y=S,x=Attribute,color=Category,group=1))
pST<-pST + coord_flip()
pST<-pST + geom_point(pch=19,alpha=0.37)
pST<- pST + facet_wrap(~Category,ncol=3)
pST<- pST + labs(title = paste("S for Panelist",levels(df1$Panelist)[i]))
pST<- pST + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pST<- pST + geom_hline(y=1,color="green",linetype=2)
print(pST)
# Make Flavor Plots S
pSF<-ggplot(data=df2Flavor[df2Flavor$Panelist==levels(df2Flavor$Panelist)[i],],
aes(y=S,x=Attribute,color=Category,group=1))
pSF<-pSF + coord_flip()
pSF<-pSF + geom_point(pch=19,alpha=0.37)
pSF<- pSF + facet_wrap(~Category,ncol=3)
pSF<- pSF + labs(title = paste("S for Panelist",levels(df1$Panelist)[i]))
pSF<- pSF + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pSF<- pSF + geom_hline(y=1,color="green",linetype=2)
print(pSF)
# Make Texture Plots DA
pDAT<-ggplot(data=df3Texture[df3Texture$Panelists==levels(df3Texture$Panelists)[i],],
aes(y=Panelist.DA,x=Panel.DA,color=Category))
pDAT<-pDAT + geom_point(pch=19,alpha=0.37)
pDAT<- pDAT + facet_wrap(~Attribute,scales="free_y")
pDAT<- pDAT + labs(title = paste("DA for Panelist",levels(df1$Panelist)[i]))
pDAT<- pDAT + geom_hline(y=0,color="grey",linetype=1)
pDAT<- pDAT + geom_vline(x=0,color="grey",linetype=1)
pDAT<-pDAT + scale_y_continuous(breaks=NULL)
pDAT<-pDAT + scale_x_continuous(breaks=NULL)
print(pDAT)
# Make Flavor Plots DA
pDAF<-ggplot(data=df3Flavor[df3Flavor$Panelists==levels(df3Flavor$Panelists)[i],],
aes(y=Panelist.DA,x=Panel.DA,color=Category))
pDAF<-pDAF + geom_point(pch=19,alpha=0.37)
pDAF<- pDAF + facet_wrap(~Attribute,scales="free_y")
pDAF<- pDAF + labs(title = paste("DA for Panelist",levels(df1$Panelist)[i]))
pDAF<- pDAF + geom_hline(y=0,color="grey",linetype=1)
pDAF<- pDAF + geom_vline(x=0,color="grey",linetype=1)
pDAF<-pDAF + scale_y_continuous(breaks=NULL)
pDAF<-pDAF + scale_x_continuous(breaks=NULL)
print(pDAF)
# Make Texture Plots Corr
pCorrT<-ggplot(data=df4Texture[df4Texture$Panelist==levels(df4Texture$Panelist)[i],],
aes(y=Correlation,x=Attribute,color=Category,group=1))
pCorrT<-pCorrT + coord_flip()
pCorrT<-pCorrT + geom_point(pch=19,alpha=0.37)
pCorrT<- pCorrT + labs(title = paste("Correlations for Panelist",levels(df1$Panelist)[i]))
pCorrT<- pCorrT + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pCorrT<- pCorrT + geom_hline(y=0,color="grey",linetype=2)
print(pCorrT)
# Make Flavor Plots Corr
pCorrF<-ggplot(data=df4Flavor[df4Flavor$Panelist==levels(df4Flavor$Panelist)[i],],
aes(y=Correlation,x=Attribute,color=Category,group=1))
pCorrF<-pCorrF + coord_flip()
pCorrF<-pCorrF + geom_point(pch=19,alpha=0.37)
pCorrF<- pCorrF + labs(title = paste("Correlations for Panelist",levels(df1$Panelist)[i]))
pCorrF<- pCorrF + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pCorrF<- pCorrF + geom_hline(y=0,color="grey",linetype=2)
print(pCorrF)
dev.off()
}
x <- 1:4
p <- x/sum(x)
p
temp <- rbind(x, p)
temp
rownames(temp) <- c("X", "Prob")
temp
t(temp)
temp$X*temp$Prob
t(temp$X)*t(temp$Prob)
str(temp)
temp2<-cbind(x,p)
temp2
temp$X*temp$p
temp2
temp$X*temp$p
temp2$X*temp$p
temp2<-data.frame(c(x,p))
str(temp2)
temp2<-data.frame(cbind(x,p))
str(temp2)
temp$x*temp$p
temp2$x*temp2$p
temp2
temp2$x*temp2$p
sum(temp2$x*temp2$p)
# Get Libraries
library(ggplot2)
library(reshape2)
library(lubridate)
# Set (Fixed) Constants  - CHANGE THESE ON IMPLEMENTATION
myDir<-"C:\\Users\\Owner\\Documents\\Statsmith\\NOR2013 10 Descriptive Analysis Script"
myStartDate<-as.POSIXlt("11/01/2013",format="%m/%d/%Y")
myEndDate<-as.POSIXlt("02/28/2014",format="%m/%d/%Y")
myFlavorAttributes<-c("Pork.Fatty","Turkey","Beef.Fatty","Cured","Smoke.Complex","Woody.Roasted","Fruity","Ashy.Chemical",
"Cheddar.Cheese","Cheese","Spice.Complex","Sage.Rosemary","Pepper","Nutmeg","Clove","Brown.Spice",
"Basil.Oregano","Fennel","Garlic.Onion","Jalapeno","Tomato","Savory.MSG","Salty","Sweet","Sour","Astringent",
"Mouthburn","Pork.AT","Turkey.AT","Meat.AT","Spice.AT","Pepper.AT","Smoke.AT","Cheddar.AT","Cheese.AT","Salty.AT","Mouthburn.AT")
myTextureAttributes<-c("Rough.Outer","Rough.Inside","Loose.Particles","Moistness","Springiness","Tough.Casing","Firmness","Cohesiveness",
"Moisture.Release.1st.Chew","Cohesive.Mass","Moisture.Release.Chew.Down","Oily.Mouthcoating")
# Functions
trim <- function (x) gsub("^\\s+|\\s+$", "", x) # Returns String w/o Leading or Trailing Whitespace
# Get Data Sets For Plots
# Panelist Bias Data
df1<-read.csv(paste(myDir,"\\Data Store\\Data Bias.csv",sep=""),strip.white=TRUE)
df1$Category<-trim(df1$Category)
df1$Panelist<-as.factor(df1$Panelist)
df1$Date<-mdy(df1$Date)
df1<- df1[df1$Date > myStartDate &     # Begin Date
df1$Date < myEndDate  ,]   # End Date
df1$Category<-as.factor(df1$Category)
df1Flavor<-df1[df1$Attribute %in% myFlavorAttributes,]
df1Flavor$Attribute<-factor(df1Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df1Texture<-df1[df1$Attribute %in% myTextureAttributes,]
df1Texture$Attribute<-factor(df1Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
# Panelist S Data
df2<-read.csv(paste(myDir,"\\Data Store\\Data S.csv",sep=""),strip.white=TRUE)
df2$Category<-trim(df2$Category)
df2$Panelist<-as.factor(df2$Panelist)
df2$Date<-ymd(df2$Date)
df2<- df2[df2$Date > myStartDate &     # Begin Date
df2$Date < myEndDate  ,]   # End Date
df2$Category<-as.factor(df2$Category)
df2Flavor<-df2[df2$Attribute %in% myFlavorAttributes,]
df2Flavor$Attribute<-factor(df2Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df2Texture<-df2[df2$Attribute %in% myTextureAttributes,]
df2Texture$Attribute<-factor(df2Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
# Panelist DA Data
df3<-read.csv(paste(myDir,"\\Data Store\\Data DA.csv",sep=""),strip.white=TRUE)
df3$Category<-trim(df3$Category)
df3$Panelists<-as.factor(df3$Panelists)
df3$Date<-ymd(df3$Date)
df3<- df3[df3$Date > myStartDate &     # Begin Date
df3$Date < myEndDate  ,]   # End Date
df3$Category<-as.factor(df3$Category)
df3Flavor<-df3[df3$Attribute %in% myFlavorAttributes,]
df3Flavor$Attribute<-factor(df3Flavor$Attribute,levels=myFlavorAttributes,labels=myFlavorAttributes)
df3Texture<-df3[df3$Attribute %in% myTextureAttributes,]
df3Texture$Attribute<-factor(df3Texture$Attribute,levels=myTextureAttributes,labels=myTextureAttributes)
# Panelist Corr Data
df4<-read.csv(paste(myDir,"\\Data Store\\Data Correlations.csv",sep=""),strip.white=TRUE)
df4$Category<-trim(df4$Category)
df4$Panelist<-as.factor(df4$Panelist)
df4$Date<-ymd(df4$Date)
df4<- df4[df4$Date > myStartDate &     # Begin Date
df4$Date < myEndDate  ,]   # End Date
df4$Category<-as.factor(df4$Category)
df4Flavor<-df4[df4$Attribute %in% myFlavorAttributes,]
df4Flavor$Attribute<-factor(df4Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df4Texture<-df4[df4$Attribute %in% myTextureAttributes,]
df4Texture$Attribute<-factor(df4Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
# Panel S
df5<-read.csv(paste(myDir,"\\Data Store\\Data Panel S.csv",sep=""),strip.white=TRUE)
df5$Category<-trim(df5$Category)
df5$Date<-ymd(df5$Date)
df5<- df5[df5$Date > myStartDate &     # Begin Date
df5$Date < myEndDate  ,]   # End Date
df5$Category<-as.factor(df5$Category)
df5Flavor<-df5[df5$Attribute %in% myFlavorAttributes,]
df5Flavor$Attribute<-factor(df5Flavor$Attribute,levels=rev(myFlavorAttributes),labels=rev(myFlavorAttributes))
df5Texture<-df5[df5$Attribute %in% myTextureAttributes,]
df5Texture$Attribute<-factor(df5Texture$Attribute,levels=rev(myTextureAttributes),labels=rev(myTextureAttributes))
# Make Plots Panel S Texture
pPanelS<-ggplot(data=df5Texture,
aes(y=S,x=Attribute,color=Category,group=1))
pPanelS<-pPanelS + coord_flip()
pPanelS<-pPanelS + facet_wrap(~Category,ncol=length(levels(df5Texture$Category)))
pPanelS<-pPanelS + geom_point(pch=19,alpha=0.37)
pPanelS<- pPanelS + labs(title = "Panel S")
pPanelS<- pPanelS + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pPanelS<- pPanelS + geom_hline(y=1,color="green",linetype=2)
pPanelS
print(pPanelS)
# Make Plots Panel S Flavor
pPanelS<-ggplot(data=df5Flavor,
aes(y=S,x=Attribute,color=Category,group=1))
pPanelS<-pPanelS + coord_flip()
pPanelS<-pPanelS + facet_wrap(~Category,ncol=length(levels(df5Flavor$Category)))
pPanelS<-pPanelS + geom_point(pch=19,alpha=0.37)
pPanelS<- pPanelS + labs(title = "Panel S")
pPanelS<- pPanelS + stat_summary(fun.y=mean,geom="point",pch=4,col="black")
pPanelS<- pPanelS + geom_hline(y=1,color="green",linetype=2)
pPanelS
print(pPanelS)
source('~/.active-rstudio-document')
head(df1)
is.na(df1)
dim(df1)
sum(is.na(df1))
sum(is.na(df1))
head(df1)
help(cast)
library(reshape2)
help(cast)
dfCast<-dcast(df1,date~interval,mean)
head(dfCast)
dfCast<-dcast(df1,date~interval,value.var=steps,mean)
head(df1)
dfCast<-dcast(df1,date~interval,value.var=steps,mean)
dfCast<-dcast(df1,date~interval,value.var="steps",mean)
head(dfCast)
dfCast<-dcast(df1,date~interval,value.var="steps",mean,na.rm=TRUE)
head(dfCast)
dfCast<-dcast(complete.cases(df1),date~interval,value.var="steps",mean,na.rm=TRUE)
complete.cases(df1)
dfCast<-dcast(df1[complete.cases(df1)],date~interval,value.var="steps",mean,na.rm=TRUE)
dfCast<-dcast(df1[complete.cases(df1),],date~interval,value.var="steps",mean,na.rm=TRUE)
head(dfCast)
head(df1)
dfCast<-dcast(df1[complete.cases(df1),],date~interval,value.var="steps",mean)
dfCast
head(dfCast)
dfMelt<-melt(dfCast)
head(dfMetl)
head(dfMelt)
dfMelt<-melt(dfCast,id=c("date"))
head(dfMelt)
dfMelt[1:100,]
dim(dfMelt)
dim(df1)
head(df1)
dfMeans<-aggregate(steps~interval,data=df1,mean,rm.NA=TRUE)
head(dfMeans)
dim(dfMeans)
60*24
24*12
df2<-merge(df1,dfMeans)
dim(df1)
dim(df2)
head(dfMeans)
head(df1)
head(df2)
head(dfMeans)
dfMeans
df1NA<-df1[is.na(df1$steps),]
head(df1NA)
dim(df1NA)
df2<-merge(df1NA[,c("date","interval")],dfMeans)
dim(df2)
head(df2)
head(df2,200)
df3<-rbind(df1NA,df2)
dim(df3)
dim(df1)
df3<-rbind(df1,df2)
dim(df1)
dim(df2)
dim(df3)
dim(df2)+dim(df1)
head(df1)
head(df3)
df4<-df3[complete.cases(df3),]
dim(df4)
dim(df1)
head(df1)
head(df4)
head(df4,50)
head(df4,250)
dfMeans
df1NA[,c("date","interval")]
head(df1NA[,c("date","interval")])
df2<-merge(df1NA[,c("date","interval")],dfMeans)
head(df2)
df3<-rbind(df1,df2)
df4<-df3[complete.cases(df3),]
df4<-df[order(date,interval),]
df4<-df[order(c("date","interval"),]
df4<-df[order(c("date","interval")),]
df4<-df4[order(c("date","interval")),]
head(df4)
head(df4,50)
dfMeans<-aggregate(steps~interval,data=df1,mean,rm.NA=TRUE)
df1NA<-df1[is.na(df1$steps),]
df2<-merge(df1NA[,c("date","interval")],dfMeans)
df3<-rbind(df1,df2)
df4<-df3[complete.cases(df3),]
head(df4)
dim(df4)
df4<-df4[order(c("date","interval")),]
dim(df4)
df4<-df4[order(c(date,interval)),]
df4<-df3[complete.cases(df3),]
df4<-df4[order(date,interval),]
head(df4)
df4<-df4[order(date, interval),]
df4<-df4[order(df4$date, df4$interval),]
dim(df4)
head(df1)
head(df4)
head(dfMeans)
head(df4)
dfStepsPerDayImputed<-aggregate(steps~date,data=df4,sum)
hist(dfStepsPerDayImputed$steps,xlab="Steps Per Day",main="Histogram of Steps Per Day with Imputed Data",col="blue")
hist(dfStepsPerDay$steps,xlab="Steps Per Day",main="Histogram of Steps Per Day",col="blue")
quantile(dfStepsPerDayImputed$steps)
myMean<-summary(dfStepsPerDayImputed$steps)[4]
myMedian<-summary(dfStepsPerDayImputed$steps)[3]
myMeanImputed<-summary(dfStepsPerDayImputed$steps)[4]
myMedianImputed<-summary(dfStepsPerDayImputed$steps)[3]
myMeanImputed
myMedianImputed
quantile(dfStepsPerDay$steps)
myMean<-summary(dfStepsPerDay$steps)[4]
myMedian<-summary(dfStepsPerDay$steps)[3]
quantile(dfStepsPerDayImputed$steps)
myMeanImputed<-summary(dfStepsPerDayImputed$steps)[4]
myMedianImputed<-summary(dfStepsPerDayImputed$steps)[3]
head(df1)
head(df4)
quantile(dfStepsPerDayImputed$steps)
quantile(dfStepsPerDay$steps)
summary(dfStepsPerDay$steps)
summary(dfStepsPerDayImputed$steps)
sum(df1$steps)
sum(df1$steps,na.rm=TRUE)
sum(df4$steps,na.rm=TRUE)
